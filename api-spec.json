{
  "openapi": "3.0.0",
  "info": {
    "title": "API Spec Squad Management",
    "version": "1",
    "description": "User Management, Squad Management, Chapter Management, Organization Management, Tipe Pegawai, Absensi, dan Role"
  },
  "paths": {
    "/user": {
      "post": {
        "security": [],
        "tags": ["User Management"],
        "summary": "Create User",
        "description": "Create a new user, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nip": {
                    "type": "string"
                  },
                  "nama_karyawan": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "is_admin": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string"
                  },
                  "perusahaan": {
                    "type": "string"
                  },
                  "tipe_pegawai": {
                    "type": "integer"
                  },
                  "tipe_chapter": {
                    "type": "integer"
                  },
                  "tipe_organization": {
                    "type": "integer"
                  },
                  "tipe_grade": {
                    "type": "integer"
                  },
                  "tanggal_bergabung": {
                    "type": "integer"
                  },
                  "work_hour": {
                    "type": "integer"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "nip": "202304010001",
                    "nama_karyawan": "Admin",
                    "username": "admin",
                    "password": "admin",
                    "is_admin": 0,
                    "email": "admin@gmail.com",
                    "perusahaan": "PT BlueBird Tbk.",
                    "tipe_pegawai": 1,
                    "tipe_chapter": 1,
                    "tipe_organization": 1,
                    "tipe_grade": 1,
                    "tanggal_bergabung": "2023-03-31",
                    "work_hour": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create user",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 201,
                      "message": "Successfully created user!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Key: 'CreateUser.TipeGrade' Error:Field validation for 'TipeGrade' failed on the 'required' tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "duplicate": {
                    "description": "username unique",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  },
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [],
        "tags": ["User Management"],
        "summary": "Read All Users",
        "description": "Read all users, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all user",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get all data users success",
                      "data": [
                        {
                          "id": 1,
                          "nip": 202304010001,
                          "nama_karyawan": "admin",
                          "username": "admin",
                          "email": "admin@gmail.com",
                          "tipe_pegawai": "OS",
                          "chapter": "Golang Engineer",
                          "organization": "Engineering Manager",
                          "grade": "junior",
                          "tanggal_bergabung": "01 Jan 2023"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/:number_page/:limit": {
      "get": {
        "security": [],
        "tags": ["User Management"],
        "summary": "Read All Users",
        "description": "Read all users, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all user",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "limit": 2,
                      "page_now": 1,
                      "message": "Get data success",
                      "total_page": 3,
                      "data": [
                        {
                          "id": 1,
                          "nip": "1231",
                          "perusahaan": "PT Blue bird11",
                          "nama_karyawan": "admi145",
                          "username": "admi145",
                          "email": "admin@gmail.com",
                          "tipe_pegawai": "Intern",
                          "chapter": "1",
                          "organization": "ulil",
                          "grade": "Senior",
                          "tanggal_bergabung": "12 Feb 2222"
                        },
                        {
                          "id": 2,
                          "nip": "1231",
                          "perusahaan": "PT Blue bird11",
                          "nama_karyawan": "achmadrizkinfganteng",
                          "username": "achmadrizkinfganteng",
                          "email": "admin@gmail.com",
                          "tipe_pegawai": "Intern",
                          "chapter": "3",
                          "organization": "nama organization ceritanya",
                          "grade": "Senior",
                          "tanggal_bergabung": "31 Mar 2021"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/info_user": {
      "get": {
        "security": [],
        "tags": ["User Management"],
        "summary": "Get User By Token (BY TOKEN)",
        "description": "Get User By Token (BY TOKEN)",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Get User by Token Success",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "data": {
                        "id": 3,
                        "nip": "1231",
                        "nama_karyawan": "user1",
                        "username": "user1",
                        "email": "admin@gmail.com",
                        "tipe_pegawai": "intern",
                        "chapter": "asddasasd",
                        "organization": "OR01",
                        "grade": "Junior",
                        "tanggal_bergabung": "2023-03-31",
                        "work_hour": "Shift 1",
                        "role": "users"
                      },
                      "message": "Get Users success",
                      "status_code": 200
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/update_user/:id": {
      "put": {
        "security": [],
        "tags": ["User Management"],
        "summary": "Get User By id (BY TOKEN)",
        "description": "Get User By id (BY TOKEN)",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nip": {
                    "type": "string"
                  },
                  "nama_karyawan": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "is_admin": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string"
                  },
                  "perusahaan": {
                    "type": "string"
                  },
                  "tipe_pegawai": {
                    "type": "integer"
                  },
                  "tipe_chapter": {
                    "type": "integer"
                  },
                  "tipe_organization": {
                    "type": "integer"
                  },
                  "tipe_grade": {
                    "type": "integer"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "nip": "1231",
                    "nama_karyawan": "Admin MBEE",
                    "username": "user11",
                    "password": "user11",
                    "is_admin": 0,
                    "email": "admin@gmail.com",
                    "perusahaan": "PT Blue bird",
                    "tipe_pegawai": 1,
                    "tipe_chapter": 1,
                    "tipe_organization": 1,
                    "tipe_grade": 1,
                    "tanggal_bergabung": "2023-03-31",
                    "work_hour": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get User by Token Success",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Update Users Success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/:id": {
      "delete": {
        "security": [],
        "tags": ["User Management"],
        "summary": "Delete User By ID",
        "description": "Delete User By ID, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete User Success",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Delete User Success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [],
        "tags": ["User Management"],
        "summary": "Get User By ID",
        "description": "Get User By ID, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Get User by id Success",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "data": {
                        "id": 3,
                        "nip": "1231",
                        "nama_karyawan": "user1",
                        "username": "user1",
                        "email": "admin@gmail.com",
                        "tipe_pegawai": "intern",
                        "chapter": "asddasasd",
                        "organization": "OR01",
                        "grade": "Junior",
                        "tanggal_bergabung": "2023-03-31",
                        "work_hour": "Shift 1",
                        "role": "users"
                      },
                      "message": "Get Users success",
                      "status_code": 200
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/change-pass/:id": {
      "put": {
        "security": [],
        "tags": ["User Management"],
        "summary": "Change Password User By ID",
        "description": "Change Password By ID, all role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "old_password": {
                    "type": "string"
                  },
                  "new_password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "confirm_new_password": {
                    "type": "string",
                    "minLength": 8
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "old_passoword": "admin",
                    "new_passoword": "12345678",
                    "confirm_new_password": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change Password Success",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Change Password Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "password less than 8 characters": {
                    "value": {
                      "status_code": 400,
                      "message": "Password cannot under 8 character"
                    }
                  },
                  "password contain symbol and number": {
                    "value": {
                      "status_code": 400,
                      "message": "password contain symbol and number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "security": [],
        "tags": ["Authentication"],
        "summary": "Login",
        "description": "all role",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "username": "admin",
                    "password": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succes Login",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Successfully log in!",
                      "data": [
                        {
                          "token_type": "Bearer",
                          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTcxNTksImlhdCI6MTY4MDcxMzU1OSwibmJmIjoxNjgwNzEzNTU5LCJzdWIiOjF9.l-gZjTgCOtH-2v2FsZwLeH4DE5v7AXugSruIqu6h--Y"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, invalid request",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Bad Request, Invalid username or password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "security": [],
        "tags": ["Authentication"],
        "summary": "Logout",
        "description": "Logout, all role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all user",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Successfully Logout"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chapter": {
      "get": {
        "security": [],
        "tags": ["Chapter Management"],
        "summary": "Read All Chapter",
        "description": "Read all chapter, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all chapter",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get data success",
                      "data": [
                        {
                          "id": 1,
                          "name": "Golang Engineer"
                        },
                        {
                          "id": 2,
                          "name": "Golang Engineer"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": ["Chapter Management"],
        "summary": "Create Chapter",
        "description": "Create a new chapter, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "nip": "Golang Engineer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create chapter",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 201,
                      "message": "Insert Chapter Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Key: 'CreateUser.TipeGrade' Error:Field validation for 'TipeGrade' failed on the 'required' tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chapter/:id": {
      "put": {
        "security": [],
        "tags": ["Chapter Management"],
        "summary": "Update Chapter By ID",
        "description": "Update chapter, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "nip": "Golang Engineer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update chapter",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Update Chapter Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Key: 'CreateUser.TipeGrade' Error:Field validation for 'TipeGrade' failed on the 'required' tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [],
        "tags": ["Chapter Management"],
        "summary": "Delete Chapter By ID",
        "description": "Delete User By ID, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Chapter Success",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Delete Chapter Success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tipe-pegawai": {
      "get": {
        "security": [],
        "tags": ["Tipe Pegawai Management"],
        "summary": "Read All Tipe Pegawai",
        "description": "Read all Tipe Pegawai, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all chapter",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get All Tipe Pegawai Success",
                      "Data": [
                        {
                          "ID": 1,
                          "Name": "OS",
                          "Description": "outsourcing"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": ["Tipe Pegawai Management"],
        "summary": "Create Tipe Pegawai",
        "description": "Create a new Tipe Pegawai, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "name": "OS",
                    "description": "outsourcing"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create tipe pegawai",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 201,
                      "message": "Insert Chapter Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Bad Request, Name or Description is empty"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  },
                  "duplicate": {
                    "value": {
                      "status_code": 500,
                      "message": "internal server error, duplicate name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tipe-pegawai/:id": {
      "put": {
        "security": [],
        "tags": ["Tipe Pegawai Management"],
        "summary": "Update Tipe Pegawai By ID",
        "description": "Update Tipe Pegawai, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "name": "OS",
                    "description": "outsourcing"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update tipe pegawai",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Update Chapter Success",
                      "data": {
                        "Name": "OS",
                        "Description": "outsourcing"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Bad Request, Name or Description is empty"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [],
        "tags": ["Tipe Pegawai Management"],
        "summary": "delete Tipe Pegawai By ID",
        "description": "delete Tipe Pegawai, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete tipe pegawai",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Delete Tipe Pegawai Success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ogranization": {
      "get": {
        "security": [],
        "tags": ["Organization Management"],
        "summary": "Read All Organization",
        "description": "Read all Organization, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all organization",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get All Organization Success",
                      "Data": [
                        {
                          "Id": 1,
                          "Name": "Engineering Manager",
                          "Parent": 2,
                          "Description": "dummy"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": ["Organization Management"],
        "summary": "Create Organization",
        "description": "Create a new Organization, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "Parent": {
                    "type": "integer",
                    "maximum": 1
                  },
                  "Description": {
                    "type": "string",
                    "maximum": 255
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "Name": "Engineering Manager",
                    "Parent": 2,
                    "Description": "dummy"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create organization",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 201,
                      "message": "Insert Organization Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "filed empty",
            "content": {
              "application/json": {
                "examples": {
                  "Field empty": {
                    "value": {
                      "status_code": 400,
                      "message": "Field name and parent cannot be empty"
                    }
                  },
                  "Field name length limit": {
                    "value": {
                      "status_code": 400,
                      "message": "Maximum field name 100"
                    }
                  },
                  "Field parent length limit": {
                    "value": {
                      "status_code": 400,
                      "message": "Maximum field name 10"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Db error": {
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  },
                  "duplicate": {
                    "value": {
                      "status_code": 500,
                      "message": "internal server error, duplicate name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organization/:id": {
      "put": {
        "security": [],
        "tags": ["Organization Management"],
        "summary": "Update Tipe Organization By ID",
        "description": "Update Tipe Organization, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "Parent": {
                    "type": "integer",
                    "maximum": 1
                  },
                  "Description": {
                    "type": "string",
                    "maximum": 255
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "Name": "Engineering Manager",
                    "Parent": 2,
                    "Description": "dummy"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update Grade",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Update Organization Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "filed empty",
            "content": {
              "application/json": {
                "examples": {
                  "Field empty": {
                    "value": {
                      "status_code": 400,
                      "message": "Field name and parent cannot be empty"
                    }
                  },
                  "Field name length limit": {
                    "value": {
                      "status_code": 400,
                      "message": "Maximum field name 100"
                    }
                  },
                  "Field parent length limit": {
                    "value": {
                      "status_code": 400,
                      "message": "Maximum field name 10"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Db error": {
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  },
                  "duplicate": {
                    "value": {
                      "status_code": 500,
                      "message": "internal server error, duplicate name"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [],
        "tags": ["Organization Management"],
        "summary": "delete Organization By ID",
        "description": "delete Organization, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete Organization",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Delete Organization Success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/squad": {
      "get": {
        "security": [],
        "tags": ["Squad Management"],
        "summary": "Read All Squad",
        "description": "Read all Squad, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all Squad",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get all data squads success",
                      "data": [
                        {
                          "Name": "Squad management system",
                          "Description": "Project intern kampus merdeka"
                        },
                        {
                          "Name": "Squad management system (test)",
                          "Description": "Project intern kampus merdeka"
                        },
                        {
                          "Name": "test",
                          "Description": "test"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": ["Squad Management"],
        "summary": "Create Squad",
        "description": "Create a new Squad, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "name": "Squad Management System",
                    "description": "project intern"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create Squad",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 201,
                      "message": "Insert Squad Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Key: 'GradeRequest.Name' Error:Field validation for 'Name' failed on the 'required' tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  },
                  "duplicate": {
                    "value": {
                      "status_code": 500,
                      "message": "internal server error, duplicate name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/squad/:id": {
      "delete": {
        "security": [],
        "tags": ["Squad Management"],
        "summary": "delete Squad By ID",
        "description": "delete Squad, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete Squad",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Delete Squad Success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [],
        "tags": ["Squad Management"],
        "summary": "Update Tipe Squad By ID",
        "description": "Update Tipe Squad, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "name": "Squad Management System",
                    "description": "project intern"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update Squad",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Update Squad Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Key: 'GradeRequest.Name' Error:Field validation for 'Name' failed on the 'required' tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-squad": {
      "post": {
        "security": [],
        "tags": ["Squad Management"],
        "summary": "Create User Squad",
        "description": "Create user a new Squad, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "integer"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "user_id": 2,
                    "squad_id": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create Squad",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 201,
                      "message": "success creating user squad"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Key: 'GradeRequest.Name' Error:Field validation for 'Name' failed on the 'required' tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  },
                  "duplicate": {
                    "value": {
                      "status_code": 500,
                      "message": "internal server error, duplicate name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-squad-by-user/:id": {
      "get": {
        "security": [],
        "tags": ["Squad Management"],
        "summary": "Read All Squad By User",
        "description": "Read all Squad by user, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all Squad",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get all data squads success by user",
                      "data": [
                        {
                          "Name": "Squad management system"
                        },
                        {
                          "Name": "Squad management system (test)"
                        },
                        {
                          "Name": "test"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-squad-by-squad/:id": {
      "get": {
        "security": [],
        "tags": ["Squad Management"],
        "summary": "Read All Squad By squad",
        "description": "Read all Squad by squad, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all Squad",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get all data squads success by squad",
                      "data": [
                        {
                          "Name": "rizki"
                        },
                        {
                          "Name": "deny"
                        },
                        {
                          "Name": "seno"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/grade": {
      "get": {
        "security": [],
        "tags": ["Grade Management"],
        "summary": "Read All Grade",
        "description": "Read all Grade, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all grade",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get data success",
                      "data": [
                        {
                          "name": "junior"
                        },
                        {
                          "name": "senior"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": ["Grade Management"],
        "summary": "Create Grade",
        "description": "Create a new Grade, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "name": "OS",
                    "description": "outsourcing"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create Grade",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 201,
                      "message": "Insert Grade Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Key: 'GradeRequest.Name' Error:Field validation for 'Name' failed on the 'required' tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  },
                  "duplicate": {
                    "value": {
                      "status_code": 500,
                      "message": "internal server error, duplicate name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/grade/:id": {
      "put": {
        "security": [],
        "tags": ["Grade Management"],
        "summary": "Update Tipe Grade By ID",
        "description": "Update Tipe Grade, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "name": "Junior1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update Grade",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Update Grade Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 400,
                      "message": "Key: 'GradeRequest.Name' Error:Field validation for 'Name' failed on the 'required' tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [],
        "tags": ["Grade Management"],
        "summary": "delete Grade By ID",
        "description": "delete Grade, admin role",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete grade",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Delete Grade Success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "java": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi": {
      "post": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Create Absensi",
        "description": "Create a new Absensi, role user",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tap_id": {
                    "type": "integer",
                    "maxLength": 1
                  },
                  "device_signature": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "tap_id": 1,
                    "device_signature": "Huawei Nova 5T",
                    "qr_code": "dajfnakfakf"
                  },
                  "description": "tap_id hanya memiliki 2 nilai yaitu 1 untuk tap in dan 2 untuk tap out"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": {
                          "user": {
                              "Id": 2,
                              "nip": "202304010001",
                              "username": "user",
                              "perusahaan": "PT BlueBird Tbk.",
                              "nama_karyawan": "user",
                              "email": "user@gmail.com",
                              "tipe_pegawai": "OS",
                              "chapter": "Golang Engineer",
                              "organization": "Engineering Manager",
                              "grade": "junior",
                              "squad": "squad management system, test squad 1 dan test squad 2",
                              "work_hour": "Shift 1",
                              "tanggal_bergabung": "2 Jan 2006"
                          },
                          "absensi": {
                              "user_id": 2,
                              "date": "6 May 2023",
                              "tap_in": "",
                              "location_tap_in": "",
                              "tap_out": "11:59:53 WIB",
                              "location_tap_out": "lantai 4",
                              "status": "waiting for check in"
                          }
                      },
                      "status_code": 201,
                      "message": "Create absensi success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, failed create user, request body not available",
            "content": {
              "application/json": {
                "examples": {
                  "request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "tap_id and device_signature are empty. For example, tap_id has a value of 1 for check in and a value of 2 for check out. then for device_signature with user device details for example Huawei Nova 5 T"
                    }
                  },
                  "tap_id not valid": {
                    "value": {
                      "status_code": 400,
                      "message": "tap_id mismatch example number 1 for incoming absences and number 2 for outgoing absences"
                    }
                  },
                  "max length device_signature": {
                    "value": {
                      "status_code": 400,
                      "message": "Maximum character length for device_signature variable is 100"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "token kosong": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "duplicate attendance": {
                    "value": {
                      "status_code": 500,
                      "message": "attendance already exists"
                    }
                  },
                  "failed to check in": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to check in. Please try again later"
                    }
                  },
                  "failed to check out": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to check out. Please try again later"
                    }
                  },
                  "qr code not valid": {
                    "value": {
                      "status_code": 500,
                      "message": "invalid QR code"
                    }
                  },
                  "failed to take attendance": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi User",
        "description": "Read all Absensi by user, role user",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": [
                        {
                          "no": 1,
                          "user": {
                            "Id": 2,
                            "nip": "202304010002",
                            "username": "user",
                            "perusahaan": "PT BlueBird Tbk.",
                            "nama_karyawan": "User",
                            "email": "user@gmail.com",
                            "tipe_pegawai": "OS",
                            "chapter": "Golang Engineer",
                            "organization": "Engineering Manager",
                            "grade": "senior1",
                            "squad": "Squad management system, Squad management system dan Squad management system (test)",
                            "work_hour": "Shift 1",
                            "tanggal_bergabung": "2 Jan 2006"
                          },
                          "absensi": {
                            "user_id": 2,
                            "date": "12 Apr 2023",
                            "tap_id": "00:37:57 WIB",
                            "location_tap_in": "Kantor Baru Lt. 6",
                            "tap_out": "01:19:10 WIB",
                            "location_tap_out": "Kantor Baru Lt. 6"
                          }
                        },
                        {
                          "no": 2,
                          "user": {
                            "Id": 2,
                            "nip": "202304010002",
                            "username": "user",
                            "perusahaan": "PT BlueBird Tbk.",
                            "nama_karyawan": "User",
                            "email": "user@gmail.com",
                            "tipe_pegawai": "OS",
                            "chapter": "Golang Engineer",
                            "organization": "Engineering Manager",
                            "grade": "senior1",
                            "squad": "Squad management system, Squad management system dan Squad management system (test)",
                            "work_hour": "Shift 1",
                            "tanggal_bergabung": "2 Jan 2006"
                          },
                          "absensi": {
                            "user_id": 2,
                            "date": "13 Apr 2023",
                            "tap_id": "00:37:57 WIB",
                            "location_tap_in": "Kantor Baru Lt. 6",
                            "tap_out": "21:53:31 WIB",
                            "location_tap_out": "6th floor of the New Building"
                          }
                        },
                        {
                          "no": 3,
                          "user": {
                            "Id": 2,
                            "nip": "202304010002",
                            "username": "user",
                            "perusahaan": "PT BlueBird Tbk.",
                            "nama_karyawan": "User",
                            "email": "user@gmail.com",
                            "tipe_pegawai": "OS",
                            "chapter": "Golang Engineer",
                            "organization": "Engineering Manager",
                            "grade": "senior1",
                            "squad": "Squad management system, Squad management system dan Squad management system (test)",
                            "work_hour": "Shift 1",
                            "tanggal_bergabung": "2 Jan 2006"
                          },
                          "absensi": {
                            "user_id": 2,
                            "date": "14 Apr 2023",
                            "tap_id": "00:37:57 WIB",
                            "location_tap_in": "Kantor Baru Lt. 6",
                            "tap_out": "",
                            "location_tap_out": ""
                          }
                        }
                      ],
                      "status_code": 200,
                      "message": "Take all absences successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/:id": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi User by Date",
        "description": "Read all Absensi user, role admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": [
                          {
                              "no": 1,
                              "user": {
                                  "Id": 2,
                                  "nip": "202304010001",
                                  "username": "user",
                                  "perusahaan": "PT BlueBird Tbk.",
                                  "nama_karyawan": "user",
                                  "email": "user@gmail.com",
                                  "tipe_pegawai": "OS",
                                  "chapter": "Golang Engineer",
                                  "organization": "Engineering Manager",
                                  "grade": "junior",
                                  "squad": "squad management system, test squad 1 dan test squad 2",
                                  "work_hour": "Shift 1",
                                  "tanggal_bergabung": "2 Jan 2006"
                              },
                              "absensi": {
                                  "user_id": 2,
                                  "date": "6 May 2023",
                                  "tap_in": "07:55:51 WIB",
                                  "location_tap_in": "lantai 4",
                                  "tap_out": "21:56:24 WIB",
                                  "location_tap_out": "lantai 4",
                                  "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                              }
                          }
                      ],
                      "status_code": 200,
                      "message": "Taking attendance based on user id was successful"
                   }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request body empty",
            "content": {
              "application/json": {
                "examples": {
                  "Request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  },
                  "Request body type not date": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "user not found": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/:id/download": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Download Absensi All CSV",
        "description": "Read all Absensi, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read absensi user",
            "content": {
              "CSV": {}
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "user not found": {
                    "value": {
                      "status_code": 500,
                      "message": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/:id/:offset/:limit": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi User by Date",
        "description": "Read all Absensi user, role admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": {
                          "total_absensi": 2,
                          "current_pages": 1,
                          "total_pages": 1,
                          "Datas": [
                              {
                                  "no": 1,
                                  "user": {
                                      "Id": 2,
                                      "nip": "202304010001",
                                      "username": "user",
                                      "perusahaan": "PT BlueBird Tbk.",
                                      "nama_karyawan": "user",
                                      "email": "user@gmail.com",
                                      "tipe_pegawai": "OS",
                                      "chapter": "Golang Engineer",
                                      "organization": "Engineering Manager",
                                      "grade": "junior",
                                      "squad": "squad management system, test squad 1 dan test squad 2",
                                      "work_hour": "Shift 1",
                                      "tanggal_bergabung": "2 Jan 2006"
                                  },
                                  "absensi": {
                                      "user_id": 2,
                                      "date": "5 May 2023",
                                      "tap_in": "07:55:51 WIB",
                                      "location_tap_in": "lantai 4",
                                      "tap_out": "21:56:24 WIB",
                                      "location_tap_out": "lantai 4",
                                      "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                                  }
                              },
                              {
                                  "no": 2,
                                  "user": {
                                      "Id": 2,
                                      "nip": "202304010001",
                                      "username": "user",
                                      "perusahaan": "PT BlueBird Tbk.",
                                      "nama_karyawan": "user",
                                      "email": "user@gmail.com",
                                      "tipe_pegawai": "OS",
                                      "chapter": "Golang Engineer",
                                      "organization": "Engineering Manager",
                                      "grade": "junior",
                                      "squad": "squad management system, test squad 1 dan test squad 2",
                                      "work_hour": "Shift 1",
                                      "tanggal_bergabung": "2 Jan 2006"
                                  },
                                  "absensi": {
                                      "user_id": 2,
                                      "date": "6 May 2023",
                                      "tap_in": "",
                                      "location_tap_in": "",
                                      "tap_out": "22:32:46 WIB",
                                      "location_tap_out": "lantai 4",
                                      "status": "waiting for check in"
                                  }
                              }
                          ]
                      },
                      "status_code": 200,
                      "message": "Taking attendance based on user id was successful"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh": {
                    "value": {
                      "status_code": 500,
                      "message": "exceeded the search data limit"
                    }
                  },
                  "user not found": {
                    "value": {
                      "status_code": 500,
                      "message": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/:id/date": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi User by Date",
        "description": "Read all Absensi user, role user",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "end_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "start_date": "2023-04-14",
                    "end_date": "2023-04-14"
                  },
                  "description": "tipe data date format"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": [
                          {
                              "no": 1,
                              "user": {
                                  "Id": 2,
                                  "nip": "202304010001",
                                  "username": "user",
                                  "perusahaan": "PT BlueBird Tbk.",
                                  "nama_karyawan": "user",
                                  "email": "user@gmail.com",
                                  "tipe_pegawai": "OS",
                                  "chapter": "Golang Engineer",
                                  "organization": "Engineering Manager",
                                  "grade": "junior",
                                  "squad": "squad management system, test squad 1 dan test squad 2",
                                  "work_hour": "Shift 1",
                                  "tanggal_bergabung": "2 Jan 2006"
                              },
                              "absensi": {
                                  "user_id": 2,
                                  "date": "5 May 2023",
                                  "tap_in": "07:55:51 WIB",
                                  "location_tap_in": "lantai 4",
                                  "tap_out": "21:56:24 WIB",
                                  "location_tap_out": "lantai 4",
                                  "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                              }
                          }
                      ],
                      "status_code": 200,
                      "message": "Taking attendance data based on user id and date successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request body empty",
            "content": {
              "application/json": {
                "examples": {
                  "Request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  },
                  "Request body type not date": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh date": {
                    "value": {
                      "status_code": 500,
                      "message": "the start date exceeds the end date"
                    }
                  },
                  "user not found": {
                    "value": {
                      "status_code": 500,
                      "message": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/:id/date/:offset/:limit": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi User by Date",
        "description": "Read all Absensi user, role admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "end_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "start_date": "2023-04-14",
                    "end_date": "2023-04-14"
                  },
                  "description": "tipe data date format"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": {
                          "total_absensi": 1,
                          "current_pages": 1,
                          "total_pages": 1,
                          "Datas": [
                              {
                                  "no": 1,
                                  "user": {
                                      "Id": 2,
                                      "nip": "202304010001",
                                      "username": "user",
                                      "perusahaan": "PT BlueBird Tbk.",
                                      "nama_karyawan": "user",
                                      "email": "user@gmail.com",
                                      "tipe_pegawai": "OS",
                                      "chapter": "Golang Engineer",
                                      "organization": "Engineering Manager",
                                      "grade": "junior",
                                      "squad": "squad management system, test squad 1 dan test squad 2",
                                      "work_hour": "Shift 1",
                                      "tanggal_bergabung": "2 Jan 2006"
                                  },
                                  "absensi": {
                                      "user_id": 2,
                                      "date": "5 May 2023",
                                      "tap_in": "07:55:51 WIB",
                                      "location_tap_in": "lantai 4",
                                      "tap_out": "21:56:24 WIB",
                                      "location_tap_out": "lantai 4",
                                      "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                                  }
                              }
                          ]
                      },
                      "status_code": 200,
                      "message": "Taking attendance data based on user id and successful date"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request body empty",
            "content": {
              "application/json": {
                "examples": {
                  "Request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  },
                  "Request body type not date": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh page": {
                    "value": {
                      "status_code": 500,
                      "message": "exceeded the search data limit"
                    }
                  },
                  "limit seacrh date": {
                    "value": {
                      "status_code": 500,
                      "message": "the start date exceeds the end date"
                    }
                  },
                  "user not found": {
                    "value": {
                      "status_code": 500,
                      "message": "user not found"
                    }
                }}
              }
            }
          }
        }
      }
    },
    "/absensi/:id/download/date": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Download Absensi All CSV",
        "description": "Read all Absensi, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "end_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "start_date": "2023-04-14",
                    "end_date": "2023-04-14"
                  },
                  "description": "tipe data date format"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success read absensi user",
            "content": {
              "CSV": {}
            }
          },
          "400": {
            "description": "Request body empty",
            "content": {
              "application/json": {
                "examples": {
                  "Request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  },
                  "Request body type not date": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh date": {
                    "value": {
                      "status_code": 500,
                      "message": "the start date exceeds the end date"
                    }
                  },
                  "user not found": {
                    "value": {
                      "status_code": 500,
                      "message": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/all": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi",
        "description": "Read all Absensi user, role admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": [
                          {
                              "no": 1,
                              "user": {
                                  "Id": 2,
                                  "nip": "202304010001",
                                  "username": "user",
                                  "perusahaan": "PT BlueBird Tbk.",
                                  "nama_karyawan": "user",
                                  "email": "user@gmail.com",
                                  "tipe_pegawai": "OS",
                                  "chapter": "Golang Engineer",
                                  "organization": "Engineering Manager",
                                  "grade": "junior",
                                  "squad": "squad management system, test squad 1 dan test squad 2",
                                  "work_hour": "Shift 1",
                                  "tanggal_bergabung": "2 Jan 2006"
                              },
                              "absensi": {
                                  "user_id": 2,
                                  "date": "5 May 2023",
                                  "tap_in": "07:55:51 WIB",
                                  "location_tap_in": "lantai 4",
                                  "tap_out": "21:56:24 WIB",
                                  "location_tap_out": "lantai 4",
                                  "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                              }
                          },
                          {
                              "no": 2,
                              "user": {
                                  "Id": 2,
                                  "nip": "202304010001",
                                  "username": "user",
                                  "perusahaan": "PT BlueBird Tbk.",
                                  "nama_karyawan": "user",
                                  "email": "user@gmail.com",
                                  "tipe_pegawai": "OS",
                                  "chapter": "Golang Engineer",
                                  "organization": "Engineering Manager",
                                  "grade": "junior",
                                  "squad": "squad management system, test squad 1 dan test squad 2",
                                  "work_hour": "Shift 1",
                                  "tanggal_bergabung": "2 Jan 2006"
                              },
                              "absensi": {
                                  "user_id": 2,
                                  "date": "6 May 2023",
                                  "tap_in": "",
                                  "location_tap_in": "",
                                  "tap_out": "22:32:46 WIB",
                                  "location_tap_out": "lantai 4",
                                  "status": "waiting for check in"
                              }
                          }
                      ],
                      "status_code": 200,
                      "message": "Take all absences successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/all/:offset/:limit": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi",
        "description": "Read all Absensi user, role admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": {
                          "total_absensi": 2,
                          "current_pages": 1,
                          "total_pages": 1,
                          "Datas": [
                              {
                                  "no": 1,
                                  "user": {
                                      "Id": 2,
                                      "nip": "202304010001",
                                      "username": "user",
                                      "perusahaan": "PT BlueBird Tbk.",
                                      "nama_karyawan": "user",
                                      "email": "user@gmail.com",
                                      "tipe_pegawai": "OS",
                                      "chapter": "Golang Engineer",
                                      "organization": "Engineering Manager",
                                      "grade": "junior",
                                      "squad": "squad management system, test squad 1 dan test squad 2",
                                      "work_hour": "Shift 1",
                                      "tanggal_bergabung": "2 Jan 2006"
                                  },
                                  "absensi": {
                                      "user_id": 2,
                                      "date": "5 May 2023",
                                      "tap_in": "07:55:51 WIB",
                                      "location_tap_in": "lantai 4",
                                      "tap_out": "21:56:24 WIB",
                                      "location_tap_out": "lantai 4",
                                      "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                                  }
                              },
                              {
                                  "no": 2,
                                  "user": {
                                      "Id": 2,
                                      "nip": "202304010001",
                                      "username": "user",
                                      "perusahaan": "PT BlueBird Tbk.",
                                      "nama_karyawan": "user",
                                      "email": "user@gmail.com",
                                      "tipe_pegawai": "OS",
                                      "chapter": "Golang Engineer",
                                      "organization": "Engineering Manager",
                                      "grade": "junior",
                                      "squad": "squad management system, test squad 1 dan test squad 2",
                                      "work_hour": "Shift 1",
                                      "tanggal_bergabung": "2 Jan 2006"
                                  },
                                  "absensi": {
                                      "user_id": 2,
                                      "date": "6 May 2023",
                                      "tap_in": "",
                                      "location_tap_in": "",
                                      "tap_out": "22:32:46 WIB",
                                      "location_tap_out": "lantai 4",
                                      "status": "waiting for check in"
                                  }
                              }
                          ]
                      },
                      "status_code": 200,
                      "message": "Take all absences successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh page": {
                    "value": {
                      "status_code": 500,
                      "message": "exceeded the search data limit"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/all/date": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi User by Date",
        "description": "Read all Absensi user, role user",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "end_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "start_date": "2023-04-14",
                    "end_date": "2023-04-14"
                  },
                  "description": "tipe data date format"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": [
                          {
                              "no": 1,
                              "user": {
                                  "Id": 2,
                                  "nip": "202304010001",
                                  "username": "user",
                                  "perusahaan": "PT BlueBird Tbk.",
                                  "nama_karyawan": "user",
                                  "email": "user@gmail.com",
                                  "tipe_pegawai": "OS",
                                  "chapter": "Golang Engineer",
                                  "organization": "Engineering Manager",
                                  "grade": "junior",
                                  "squad": "squad management system, test squad 1 dan test squad 2",
                                  "work_hour": "Shift 1",
                                  "tanggal_bergabung": "2 Jan 2006"
                              },
                              "absensi": {
                                  "user_id": 2,
                                  "date": "5 May 2023",
                                  "tap_in": "07:55:51 WIB",
                                  "location_tap_in": "lantai 4",
                                  "tap_out": "21:56:24 WIB",
                                  "location_tap_out": "lantai 4",
                                  "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                              }
                          }
                      ],
                      "status_code": 200,
                      "message": "Taking attendance data based on date successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request body empty",
            "content": {
              "application/json": {
                "examples": {
                  "Request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  },
                  "Request body type not date": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh date": {
                    "value": {
                      "status_code": 500,
                      "message": "the start date exceeds the end date"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/all/date/:offset/:limit": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi User by Date",
        "description": "Read all Absensi user, role user",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "end_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "start_date": "2023-04-14",
                    "end_date": "2023-04-14"
                  },
                  "description": "tipe data date format"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": {
                          "total_absensi": 1,
                          "current_pages": 1,
                          "total_pages": 1,
                          "Datas": [
                              {
                                  "no": 1,
                                  "user": {
                                      "Id": 2,
                                      "nip": "202304010001",
                                      "username": "user",
                                      "perusahaan": "PT BlueBird Tbk.",
                                      "nama_karyawan": "user",
                                      "email": "user@gmail.com",
                                      "tipe_pegawai": "OS",
                                      "chapter": "Golang Engineer",
                                      "organization": "Engineering Manager",
                                      "grade": "junior",
                                      "squad": "squad management system, test squad 1 dan test squad 2",
                                      "work_hour": "Shift 1",
                                      "tanggal_bergabung": "2 Jan 2006"
                                  },
                                  "absensi": {
                                      "user_id": 2,
                                      "date": "5 May 2023",
                                      "tap_in": "07:55:51 WIB",
                                      "location_tap_in": "lantai 4",
                                      "tap_out": "21:56:24 WIB",
                                      "location_tap_out": "lantai 4",
                                      "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                                  }
                              }
                          ]
                      },
                      "status_code": 200,
                      "message": "Taking attendance data based on date successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request body empty",
            "content": {
              "application/json": {
                "examples": {
                  "Request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  },
                  "Request body type not date": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh date": {
                    "value": {
                      "status_code": 500,
                      "message": "the start date exceeds the end date"
                    }
                  },
                  "limit seacrh page": {
                    "value": {
                      "status_code": 500,
                      "message": "exceeded the search data limit"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/date": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read Absensi User by Date",
        "description": "Read all Absensi user, role user",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "end_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "start_date": "2023-04-14",
                    "end_date": "2023-04-14"
                  },
                  "description": "tipe data date format"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success read all absensi",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "Data": [
                          {
                              "no": 1,
                              "user": {
                                  "Id": 2,
                                  "nip": "202304010001",
                                  "username": "user",
                                  "perusahaan": "PT BlueBird Tbk.",
                                  "nama_karyawan": "user",
                                  "email": "user@gmail.com",
                                  "tipe_pegawai": "OS",
                                  "chapter": "Golang Engineer",
                                  "organization": "Engineering Manager",
                                  "grade": "junior",
                                  "squad": "squad management system, test squad 1 dan test squad 2",
                                  "work_hour": "Shift 1",
                                  "tanggal_bergabung": "2 Jan 2006"
                              },
                              "absensi": {
                                  "user_id": 2,
                                  "date": "5 May 2023",
                                  "tap_in": "07:55:51 WIB",
                                  "location_tap_in": "lantai 4",
                                  "tap_out": "21:56:24 WIB",
                                  "location_tap_out": "lantai 4",
                                  "status": "Datang cepat 4 menit 9 detik dan overtime 5 jam 33 detik"
                              }
                          }
                      ],
                      "status_code": 200,
                      "message": "Taking attendance data based on date successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request body empty",
            "content": {
              "application/json": {
                "examples": {
                  "Request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  },
                  "Request body type not date": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh date": {
                    "value": {
                      "status_code": 500,
                      "message": "the start date exceeds the end date"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/download": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Download Absensi All CSV",
        "description": "Read all Absensi, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success read absensi user",
            "content": {
              "CSV": {}
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "DB error": {
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/absensi/download/date": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Download Absensi All CSV",
        "description": "Read all Absensi, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "end_date": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "start_date": "2023-04-14",
                    "end_date": "2023-04-14"
                  },
                  "description": "tipe data date format"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success read absensi user",
            "content": {
              "CSV": {}
            }
          },
          "400": {
            "description": "Request body empty",
            "content": {
              "application/json": {
                "examples": {
                  "Request body empty": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  },
                  "Request body type not date": {
                    "value": {
                      "status_code": 400,
                      "message": "start_date and end_date cannot be empty, for example 2023-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "value": {
                      "status_code": 500,
                      "message": "failed to take attendance"
                    }
                  },
                  "limit seacrh date": {
                    "value": {
                      "status_code": 500,
                      "message": "the start date exceeds the end date"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shift-work": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read All Shift Work",
        "description": "Read all shift work, user",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Succes get shift work",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get shift successfully",
                      "data": [
                        {
                          "id": 1,
                          "name": "Shift 1",
                          "description": "keterlambatan 30 menit",
                          "tap_in": "09:00:00",
                          "tap_out": "18:00:00",
                          "location": "Gedung Baru Lt. 6"
                        },
                        {
                          "id": 2,
                          "name": "Shift 2",
                          "description": "keterlambatan 30 menit",
                          "tap_in": "08:00:00",
                          "tap_out": "17:00:00",
                          "location": "Gedung Baru Lt. 4"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Create Shift Work",
        "description": "create shift work, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "tap_in": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 5
                  },
                  "tap_out": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 5
                  },
                  "location": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "name": "Shift 4",
                    "description": "keterlambatan 30 menit (test)",
                    "tap_in": "00:00",
                    "tap_out": "00:00",
                    "location": "Gedung Baru Lt. 4 (test)"
                  },
                  "description": "yang tidak wajib di isi hanya description"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succes create shift work",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 201,
                      "message": "Created shift successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Field empty": {
                    "value": {
                      "status_code": 400,
                      "message": "name, tap_in, tap_out and location cannot be empty"
                    }
                  },
                  "Field name limit": {
                    "value": {
                      "status_code": 400,
                      "message": "maximum field length description 100"
                    }
                  },
                  "Field description limit": {
                    "value": {
                      "status_code": 400,
                      "message": "maximum field length description 255"
                    }
                  },
                  "Field tap_in or tap_out limit": {
                    "value": {
                      "status_code": 400,
                      "message": "tap_in and tap_out are not of type time, for example 09:00"
                    }
                  },
                  "Field location limit": {
                    "value": {
                      "status_code": 400,
                      "message": "maximum field length description 100"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shift-work/all": {
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read All Shift Work",
        "description": "Read all shift work, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Succes get shift work",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get shift successfully",
                      "data": [
                        {
                          "id": 1,
                          "name": "Shift 1",
                          "description": "keterlambatan 30 menit",
                          "tap_in": "09:00:00",
                          "tap_out": "18:00:00",
                          "location": "Gedung Baru Lt. 6"
                        },
                        {
                          "id": 2,
                          "name": "Shift 2",
                          "description": "keterlambatan 30 menit",
                          "tap_in": "08:00:00",
                          "tap_out": "17:00:00",
                          "location": "Gedung Baru Lt. 4"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shift-work/:id": {
      "put": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Update Shift Work By ID",
        "description": "update shift work, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "tap_in": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 5
                  },
                  "tap_out": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 5
                  },
                  "location": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              },
              "examples": {
                "request_body": {
                  "value": {
                    "name": "Shift 4",
                    "description": "keterlambatan 30 menit (test)",
                    "tap_in": "00:00",
                    "tap_out": "00:00",
                    "location": "Gedung Baru Lt. 4 (test)"
                  },
                  "description": "yang tidak wajib di isi hanya description"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succes update shift work",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Update shift successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Field empty": {
                    "value": {
                      "status_code": 400,
                      "message": "name, tap_in, tap_out and location cannot be empty"
                    }
                  },
                  "Field name limit": {
                    "value": {
                      "status_code": 400,
                      "message": "maximum field length description 100"
                    }
                  },
                  "Field description limit": {
                    "value": {
                      "status_code": 400,
                      "message": "maximum field length description 255"
                    }
                  },
                  "Field tap_in or tap_out limit": {
                    "value": {
                      "status_code": 400,
                      "message": "tap_in and tap_out are not of type time, for example 09:00"
                    }
                  },
                  "Field location limit": {
                    "value": {
                      "status_code": 400,
                      "message": "maximum field length description 100"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Delete Shift Work By ID",
        "description": "update shift work, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Succes delete shift work",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Delete shift successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "examples": {
                  "Page not found": {
                    "value": {
                      "status_code": 404,
                      "message": "Page not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [],
        "tags": ["Absensi Management"],
        "summary": "Read All Shift Work",
        "description": "Read all shift work, admin",
        "parameters": [
          {
            "name": "Bearrer Token",
            "in": "header",
            "required": true,
            "description": "Need bearrer token"
          }
        ],
        "responses": {
          "200": {
            "description": "Succes get shift work",
            "content": {
              "application/json": {
                "examples": {
                  "raw": {
                    "value": {
                      "status_code": 200,
                      "message": "Get shift successfully",
                      "data": {
                        "id": 1,
                        "name": "Shift 1",
                        "description": "keterlambatan 30 menit",
                        "tap_in": "09:00:00",
                        "tap_out": "18:00:00",
                        "location": "Gedung Baru Lt. 6"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorize, token invalid",
            "content": {
              "application/json": {
                "examples": {
                  "Tidak ada Token": {
                    "value": {
                      "status_code": 401,
                      "message": "You are not logged in"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "UnAuthorize": {
                    "value": {
                      "status_code": 403,
                      "message": "User is not admin, cannot access the api"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "DB error",
            "content": {
              "application/json": {
                "examples": {
                  "db error": {
                    "description": "Server Error, cannot get data",
                    "value": {
                      "status_code": 500,
                      "message": "Server Error, cannot get data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
